name: Checks

on:
  pull_request:
    branches: [trunk]
  push:
    branches: [trunk]

permissions:
  contents: read

jobs:
  Backend-Checks:
    runs-on: ubuntu-latest

    # Vars set in Github should not be used in any PROD environment
    env:
      DJANGO_DATABASE_NAME: ${{ vars.DJANGO_DATABASE_NAME }}
      DJANGO_DATABASE_USER: ${{ vars.DJANGO_DATABASE_USER }}
      DJANGO_DATABASE_PASSWORD: ${{ vars.DJANGO_DATABASE_PASSWORD }}
      DJANGO_SECRET_KEY: ${{ vars.DJANGO_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Setup
        working-directory: ./backend
        run: |
          pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Lint and Docs Styling
        working-directory: ./backend
        run: |
          pipenv run black . --check
          pipenv run flake8 . --max-line-length=100
          pipenv run pydocstyle .
      - name: Docker build
        working-directory: ./backend
        run: |
          docker build -t backend:latest .
      - name: Start Prod Server
        run: |
          docker compose up -d
          sleep 10
      - name: Make Migrations and Migrate
        working-directory: ./backend
        run: |
          pipenv run python manage.py makemigrations
          pipenv run python manage.py migrate
      - name: Run Django Tests
        working-directory: ./backend
        run: |
          pipenv run python manage.py test --settings=shoppingapp.settings.test_settings

  Frontend-Checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.16"
      - name: Setup
        working-directory: ./frontend
        run: |
          npm ci
      - name: Lint and Docs Styling
        working-directory: ./frontend
        run: |
          npm run lint
      - name: Build
        working-directory: ./frontend
        run: |
          npm run build

  Server-Checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build
        working-directory: ./server
        run: |
          docker build -t server:latest .
