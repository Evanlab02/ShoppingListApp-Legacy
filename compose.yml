version: "3"

services:
  shopping-app-django-postgres-db-dev:
    image: postgres
    expose:
      - "5432"
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${DEV_DJANGO_DATABASE_USER}
      POSTGRES_PASSWORD: ${DEV_DJANGO_DATABASE_PASSWORD}
      POSTGRES_DB: ${DEV_DJANGO_DATABASE_NAME}
    volumes:
      - dev-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DEV_DJANGO_DATABASE_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - postgres-django-network
    restart: always

  shopping-django-app-dev:
    build: ./backend
    environment:
      DEV_DJANGO_DATABASE_USER: ${DEV_DJANGO_DATABASE_USER}
      DEV_DJANGO_DATABASE_PASSWORD: ${DEV_DJANGO_DATABASE_PASSWORD}
      DEV_DJANGO_DATABASE_NAME: ${DEV_DJANGO_DATABASE_NAME}
      DEV_DJANGO_KEY: ${DEV_DJANGO_KEY}
    command:
      python manage.py runserver 0.0.0.0:7000 --settings=shoppingapp.settings.dev_settings
    expose:
      - "7000"
    ports:
      - "7000:7000"
    depends_on:
      shopping-app-django-postgres-db-dev:
        condition: service_healthy
    networks:
      - postgres-django-network
    restart: always
    develop:
      watch:
        - action: sync
          path: ./backend/**
        - action: rebuild
          path: ./backend/requirements.txt

  shopping-django-server-dev:
    build: .
    environment:
      DJANGO_KEY: ${DEV_DJANGO_KEY}
    command:
      ./bin/caddy run Caddyfile
    expose:
      - "88"
    ports:
      - "88:80"
    depends_on:
      shopping-django-app-dev:
        condition: service_started
    networks:
      - postgres-django-network
    restart: always

networks:
  postgres-django-network:
    driver: bridge

volumes:
  postgres-data:
    external: false
  dev-postgres-data:
    external: false
